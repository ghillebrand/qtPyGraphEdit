# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'form.ui'
##
## Created by: Qt User Interface Compiler version 6.8.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################


from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QApplication, QGraphicsView, QHBoxLayout,
    QListWidget, QListWidgetItem, QMainWindow, QMenu,
    QMenuBar, QSizePolicy, QSplitter, QStatusBar,
    QToolBar, QWidget)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(1040, 650)
        self.action_New = QAction(MainWindow)
        self.action_New.setObjectName(u"action_New")
        icon = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.DocumentNew))
        self.action_New.setIcon(icon)
        self.action_About = QAction(MainWindow)
        self.action_About.setObjectName(u"action_About")
        self.action_Credits = QAction(MainWindow)
        self.action_Credits.setObjectName(u"action_Credits")
        self.action_Credits.setMenuRole(QAction.MenuRole.TextHeuristicRole)
        self.actionSave = QAction(MainWindow)
        self.actionSave.setObjectName(u"actionSave")
        icon1 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.DocumentSave))
        self.actionSave.setIcon(icon1)
        self.actionSave_As = QAction(MainWindow)
        self.actionSave_As.setObjectName(u"actionSave_As")
        self.actionClose = QAction(MainWindow)
        self.actionClose.setObjectName(u"actionClose")
        self.actionPrint = QAction(MainWindow)
        self.actionPrint.setObjectName(u"actionPrint")
        self.actionExport = QAction(MainWindow)
        self.actionExport.setObjectName(u"actionExport")
        self.actionCopy = QAction(MainWindow)
        self.actionCopy.setObjectName(u"actionCopy")
        icon2 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.EditCopy))
        self.actionCopy.setIcon(icon2)
        self.actionCut = QAction(MainWindow)
        self.actionCut.setObjectName(u"actionCut")
        icon3 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.EditCut))
        self.actionCut.setIcon(icon3)
        self.actionPaste = QAction(MainWindow)
        self.actionPaste.setObjectName(u"actionPaste")
        icon4 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.EditPaste))
        self.actionPaste.setIcon(icon4)
        self.action_Open = QAction(MainWindow)
        self.action_Open.setObjectName(u"action_Open")
        icon5 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.DocumentOpen))
        self.action_Open.setIcon(icon5)
        self.action_Delete = QAction(MainWindow)
        self.action_Delete.setObjectName(u"action_Delete")
        icon6 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.EditDelete))
        self.action_Delete.setIcon(icon6)
        self.actionSelect_All = QAction(MainWindow)
        self.actionSelect_All.setObjectName(u"actionSelect_All")
        icon7 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.EditSelectAll))
        self.actionSelect_All.setIcon(icon7)
        self.actionSelect_None = QAction(MainWindow)
        self.actionSelect_None.setObjectName(u"actionSelect_None")
        self.actionNewNode = QAction(MainWindow)
        self.actionNewNode.setObjectName(u"actionNewNode")
        icon8 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.MediaRecord))
        self.actionNewNode.setIcon(icon8)
        self.actionNewNode.setMenuRole(QAction.MenuRole.NoRole)
        self.actionZoomIn = QAction(MainWindow)
        self.actionZoomIn.setObjectName(u"actionZoomIn")
        self.actionZoomOut = QAction(MainWindow)
        self.actionZoomOut.setObjectName(u"actionZoomOut")
        self.actionNewEdge = QAction(MainWindow)
        self.actionNewEdge.setObjectName(u"actionNewEdge")
        icon9 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.MediaPlaylistShuffle))
        self.actionNewEdge.setIcon(icon9)
        self.actionPointer = QAction(MainWindow)
        self.actionPointer.setObjectName(u"actionPointer")
        self.actionPointer.setCheckable(True)
        icon10 = QIcon()
        icon10.addFile("cursor.png", QSize(), QIcon.Mode.Normal, QIcon.State.On)
        self.actionPointer.setIcon(icon10)
        self.actionPointer.setMenuRole(QAction.MenuRole.NoRole)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.horizontalLayout = QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.splitter = QSplitter(self.centralwidget)
        self.splitter.setObjectName(u"splitter")
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())
        self.splitter.setSizePolicy(sizePolicy)
        self.splitter.setOrientation(Qt.Orientation.Horizontal)
        self.listWidget = QListWidget(self.splitter)
        self.listWidget.setObjectName(u"listWidget")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)
        sizePolicy1.setHorizontalStretch(1)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.listWidget.sizePolicy().hasHeightForWidth())
        self.listWidget.setSizePolicy(sizePolicy1)
        self.listWidget.setMinimumSize(QSize(100, 0))
        self.listWidget.setBaseSize(QSize(100, 0))
        self.listWidget.setFocusPolicy(Qt.FocusPolicy.WheelFocus)
        self.listWidget.setAlternatingRowColors(True)
        self.listWidget.setSelectionMode(QAbstractItemView.SelectionMode.SingleSelection)
        self.listWidget.setProperty(u"isWrapping", True)
        self.splitter.addWidget(self.listWidget)
        self.graphicsView = QGraphicsView(self.splitter)
        self.graphicsView.setObjectName(u"graphicsView")
        sizePolicy2 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)
        sizePolicy2.setHorizontalStretch(5)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.graphicsView.sizePolicy().hasHeightForWidth())
        self.graphicsView.setSizePolicy(sizePolicy2)
        self.graphicsView.setMinimumSize(QSize(400, 0))
        self.splitter.addWidget(self.graphicsView)

        self.horizontalLayout.addWidget(self.splitter)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1040, 26))
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuEdit = QMenu(self.menubar)
        self.menuEdit.setObjectName(u"menuEdit")
        self.menuTools = QMenu(self.menubar)
        self.menuTools.setObjectName(u"menuTools")
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u"statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.sys_toolBar = QToolBar(MainWindow)
        self.sys_toolBar.setObjectName(u"sys_toolBar")
        MainWindow.addToolBar(Qt.ToolBarArea.TopToolBarArea, self.sys_toolBar)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuFile.addAction(self.action_New)
        self.menuFile.addAction(self.action_Open)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.actionClose)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionPrint)
        self.menuFile.addAction(self.actionExport)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.action_Delete)
        self.menuEdit.addAction(self.actionSelect_All)
        self.menuEdit.addAction(self.actionSelect_None)
        self.menuEdit.addAction(self.actionZoomIn)
        self.menuEdit.addAction(self.actionZoomOut)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionNewNode)
        self.menuEdit.addAction(self.actionNewEdge)
        self.menuHelp.addAction(self.action_About)
        self.menuHelp.addAction(self.action_Credits)
        self.sys_toolBar.addAction(self.action_New)
        self.sys_toolBar.addAction(self.action_Open)
        self.sys_toolBar.addAction(self.actionSave)
        self.sys_toolBar.addSeparator()
        self.sys_toolBar.addAction(self.actionSelect_All)
        self.sys_toolBar.addAction(self.actionCopy)
        self.sys_toolBar.addAction(self.actionCut)
        self.sys_toolBar.addAction(self.actionPaste)
        self.sys_toolBar.addAction(self.action_Delete)
        self.sys_toolBar.addSeparator()
        self.sys_toolBar.addAction(self.actionNewNode)
        self.sys_toolBar.addAction(self.actionNewEdge)
        self.sys_toolBar.addAction(self.actionPointer)

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"MainWindow", None))
        self.action_New.setText(QCoreApplication.translate("MainWindow", u"&New", None))
#if QT_CONFIG(shortcut)
        self.action_New.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+N", None))
#endif // QT_CONFIG(shortcut)
        self.action_About.setText(QCoreApplication.translate("MainWindow", u"&About", None))
        self.action_Credits.setText(QCoreApplication.translate("MainWindow", u"&Credits", None))
        self.actionSave.setText(QCoreApplication.translate("MainWindow", u"Save", None))
#if QT_CONFIG(shortcut)
        self.actionSave.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave_As.setText(QCoreApplication.translate("MainWindow", u"Save As", None))
        self.actionClose.setText(QCoreApplication.translate("MainWindow", u"Close", None))
        self.actionPrint.setText(QCoreApplication.translate("MainWindow", u"Print", None))
#if QT_CONFIG(shortcut)
        self.actionPrint.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+P", None))
#endif // QT_CONFIG(shortcut)
        self.actionExport.setText(QCoreApplication.translate("MainWindow", u"Export", None))
        self.actionCopy.setText(QCoreApplication.translate("MainWindow", u"Copy", None))
#if QT_CONFIG(shortcut)
        self.actionCopy.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+C", None))
#endif // QT_CONFIG(shortcut)
        self.actionCut.setText(QCoreApplication.translate("MainWindow", u"Cut", None))
#if QT_CONFIG(shortcut)
        self.actionCut.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+X", None))
#endif // QT_CONFIG(shortcut)
        self.actionPaste.setText(QCoreApplication.translate("MainWindow", u"Paste", None))
#if QT_CONFIG(shortcut)
        self.actionPaste.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+V", None))
#endif // QT_CONFIG(shortcut)
        self.action_Open.setText(QCoreApplication.translate("MainWindow", u"&Open", None))
#if QT_CONFIG(shortcut)
        self.action_Open.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.action_Delete.setText(QCoreApplication.translate("MainWindow", u"&Delete", None))
#if QT_CONFIG(shortcut)
        self.action_Delete.setShortcut(QCoreApplication.translate("MainWindow", u"Del", None))
#endif // QT_CONFIG(shortcut)
        self.actionSelect_All.setText(QCoreApplication.translate("MainWindow", u"Select All", None))
#if QT_CONFIG(shortcut)
        self.actionSelect_All.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+A", None))
#endif // QT_CONFIG(shortcut)
        self.actionSelect_None.setText(QCoreApplication.translate("MainWindow", u"Select None", None))
#if QT_CONFIG(shortcut)
        self.actionSelect_None.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Shift+A", None))
#endif // QT_CONFIG(shortcut)
        self.actionNewNode.setText(QCoreApplication.translate("MainWindow", u"NewNode", None))
#if QT_CONFIG(tooltip)
        self.actionNewNode.setToolTip(QCoreApplication.translate("MainWindow", u"Add a node", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionNewNode.setShortcut(QCoreApplication.translate("MainWindow", u"N", None))
#endif // QT_CONFIG(shortcut)
        self.actionZoomIn.setText(QCoreApplication.translate("MainWindow", u"ZoomIn", None))
        self.actionZoomOut.setText(QCoreApplication.translate("MainWindow", u"ZoomOut", None))
        self.actionNewEdge.setText(QCoreApplication.translate("MainWindow", u"NewEdge", None))
#if QT_CONFIG(tooltip)
        self.actionNewEdge.setToolTip(QCoreApplication.translate("MainWindow", u"Add an Edge", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionNewEdge.setShortcut(QCoreApplication.translate("MainWindow", u"E", None))
#endif // QT_CONFIG(shortcut)
        self.actionPointer.setText(QCoreApplication.translate("MainWindow", u"Pointer", None))
#if QT_CONFIG(tooltip)
        self.actionPointer.setToolTip(QCoreApplication.translate("MainWindow", u"Select", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionPointer.setShortcut(QCoreApplication.translate("MainWindow", u"Esc", None))
#endif // QT_CONFIG(shortcut)
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"&File", None))
        self.menuEdit.setTitle(QCoreApplication.translate("MainWindow", u"Edit", None))
        self.menuTools.setTitle(QCoreApplication.translate("MainWindow", u"Tools", None))
        self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", u"Help", None))
        self.sys_toolBar.setWindowTitle(QCoreApplication.translate("MainWindow", u"toolBar", None))
    # retranslateUi

